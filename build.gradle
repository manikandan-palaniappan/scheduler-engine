buildscript {
	ext {
		springBootVersion = '1.4.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
                classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

apply plugin: 'docker'
apply plugin: 'application'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.RELEASE"
    }
}

// Docker
docker {
    baseImage = 'registry.appranix.net/library/java-base:1.8.0_77-alpine'
    registry = 'registry.appranix.net'
}

distDocker {

    setEnvironment "SCHEDULER_DB_HOST", "localhost"
    setEnvironment "SCHEDULER_DB_PORT", "5432"
    setEnvironment "SCHEDULER_DB_NAME", "scheduler"
    setEnvironment "SCHEDULER_DB_USER", "postgres"
    setEnvironment "SCHEDULER_DB_PASSWORD", "dbpassword"
    setEnvironment "SCHEDULER_ACTUATOR_PORT", "7038"
    setEnvironment "DKRON_HOST", "localhost"
    setEnvironment "DKRON_PORT", "8080"
    
    exposePort 6838

}

jar {
	baseName = 'scheduler'
	version = '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
        mavenLocal()
}


dependencies {

        compile "com.api:dkron-sdk:0.9.0"
        
        compile "org.flywaydb:flyway-core:3.0"
        
//        compile "com.h2database:h2:1.4.192" //In memory database
//        compile "mysql:mysql-connector-java:5.1.32" //MySql connector	
//        compile('org.springframework.boot:spring-boot-starter-data-cassandra')       
        compile "org.postgresql:postgresql:9.4-1204-jdbc42"
                
        compile('org.springframework.boot:spring-boot-starter-data-jpa')	
        compile('org.springframework.boot:spring-boot-starter-web')
        
        compile "org.springframework.cloud:spring-cloud-starter-sleuth"
        compile("org.springframework.boot:spring-boot-starter-actuator")
        
        compile "net.logstash.logback:logstash-logback-encoder:4.7"
        compile "org.codehaus.janino:janino:2.7.8"
            
        testCompile('org.springframework.boot:spring-boot-starter-test')
}

task listJars {
    doLast {
        configurations.compile.each { File file -> println file.name }
    }
}
